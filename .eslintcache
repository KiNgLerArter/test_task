[{"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\index.js":"1","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\reportWebVitals.js":"2","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\App.js":"3","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Main\\Main.js":"4","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Header\\Header.js":"5","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Footer\\Footer.js":"6","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\HeaderComp\\HeaderComp.js":"7","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\FooterComp\\FooterComp.js":"8","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MainComp.js":"9","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MessageComp\\MessageComp.js":"10","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MyMessageComp\\MyMessageComp.js":"11","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\https\\socket.js":"12"},{"size":388,"mtime":1612359368189,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":4567,"mtime":1612553742591,"results":"16","hashOfConfig":"14"},{"size":6811,"mtime":1612550168747,"results":"17","hashOfConfig":"14"},{"size":271,"mtime":1612463874025,"results":"18","hashOfConfig":"14"},{"size":367,"mtime":1612520982779,"results":"19","hashOfConfig":"14"},{"size":2835,"mtime":1612543225612,"results":"20","hashOfConfig":"14"},{"size":631,"mtime":1612464492189,"results":"21","hashOfConfig":"14"},{"size":2459,"mtime":1612550569366,"results":"22","hashOfConfig":"14"},{"size":1421,"mtime":1612548388875,"results":"23","hashOfConfig":"14"},{"size":637,"mtime":1612390242754,"results":"24","hashOfConfig":"14"},{"size":190,"mtime":1612425264083,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1n823w9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\index.js",[],["52","53"],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\reportWebVitals.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\App.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Main\\Main.js",["54","55","56","57"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport MainComp from '../../components/MainComp/MainComp';\r\nimport socket from '../../https/socket';\r\n\r\nclass Main extends Component {\r\n  refScrollBottom = React.createRef();\r\n  refScrollTop = React.createRef();\r\n\r\n  state = {\r\n    skipCoeff: 0,\r\n    limit: 10,\r\n    history: [\r\n      {\r\n        from: 'IDontKnow',\r\n        text: 'Прикольно. все СОС потрачены, теперь игра закончена))) ', \r\n        createdAt: '14:27',\r\n        createdAtReal: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 14, 27, 0, 0),\r\n        id: 'artificialMes1',\r\n        icon: 'sun',\r\n        myMessage: false,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      },\r\n      {\r\n        from: 'BivOld',\r\n        text: 'Я думал, что они будут пополнятся разв н-ное время. А тут реально игра закончена', \r\n        createdAt: '14:28',\r\n        createdAtReal: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 14, 28, 0, 0),\r\n        id: 'artificialMes2',\r\n        icon: 'btc',\r\n        myMessage: false,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      },\r\n      {\r\n        from: 'Nigativ',\r\n        text: 'wac можно только купить', \r\n        createdAt: '14:31',\r\n        createdAtReal: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 14, 31, 0, 0),\r\n        id: 'artificialMes3',\r\n        badge: 'moderator',\r\n        icon: 'sun',\r\n        myMessage: false,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      },\r\n      {\r\n        from: 'Skylifesky',\r\n        text: 'Цена 1 wac =0,1$ и цена не изменится', \r\n        createdAt: '14:31',\r\n        createdAtReal: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 14, 31, 0, 0),\r\n        id: 'artificialMes4',\r\n        badge: 'admin',\r\n        icon: 'btc',\r\n        myMessage: false,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      },\r\n      {\r\n        text: 'Сегодня идем на Германию', \r\n        createdAt: '10:21',\r\n        createdAtReal: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), 10, 21, 0, 0),\r\n        id: 'artificialMes5',\r\n        myMessage: true,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      }\r\n    ]\r\n  }\r\n\r\n  pushMyMessage = () => {\r\n    const messageDate = new Date();\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        history: [\r\n          ...prevState.history,\r\n          {\r\n            text: this.props.postMessage, \r\n            createdAt: messageDate.getHours() + ':' + messageDate.getMinutes(),\r\n            createdAtReal: messageDate,\r\n            id: this.uuidv4(),\r\n            myMessage: true,\r\n            lvl: Math.floor(Math.random() * 10 + 1)\r\n          }\r\n        ]\r\n      }\r\n    });\r\n    this.props.pushedMessage();\r\n  }\r\n\r\n  uuidv4 = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    socket.on('message', (data) => {\r\n      let msDate = new Date(Date.parse(data.createdAt));\r\n      let hours = msDate.getHours()\r\n      let minutes = msDate.getMinutes() < 10 ? '0' + msDate.getMinutes() : msDate.getMinutes();\r\n      let message = {\r\n        from: data.from,\r\n        text: data.text,\r\n        createdAt: hours + ':' + minutes,\r\n        createdAtReal: msDate,\r\n        id: this.uuidv4(),\r\n        myMessage: false,\r\n        lvl: Math.floor(Math.random() * 10 + 1)\r\n      }\r\n      this.setState((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          history: [\r\n            ...prevState.history,\r\n            message\r\n          ]\r\n        }\r\n      })\r\n    });\r\n\r\n    if (this.props.opened) {\r\n      if (this.props.pages.all && this.props.lang === 'RU') {\r\n        this.refScrollBottom.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\r\n  \r\n        this.refScrollTop.current.addEventListener(\"scroll\", () => {\r\n          if (this.refScrollTop.current) {\r\n            if (this.refScrollTop.current.scrollTop === 0) {\r\n              let limit = this.state.limit;\r\n              let skip = this.state.skipCoeff * limit;\r\n              fetch('https://test-task-chat-4tmzp.ondigitalocean.app/api/messages?skip=' + skip + '&limit=' + limit)\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                  let msDate, hours, minutes;\r\n                  result.forEach(element => {\r\n                    msDate = new Date(Date.parse(element.createdAt));\r\n                    hours = msDate.getHours();\r\n                    minutes = msDate.getMinutes() < 10 ? '0' + msDate.getMinutes() : msDate.getMinutes();\r\n                    element.createdAt = hours + ':' + minutes;\r\n                    element.createdAtReal = msDate;\r\n                    element.lvl = Math.floor(Math.random() * 10 + 1);\r\n                    element.id = this.uuidv4();\r\n                  });\r\n  \r\n                  this.setState((prevState) => {\r\n                    return {\r\n                      ...prevState,\r\n                      skipCoeff: prevState.skipCoeff + 1,\r\n                      history: [\r\n                        ...result,\r\n                        ...prevState.history\r\n                      ]\r\n                    }\r\n                  })\r\n                });\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    // if (this.refScrollBottom.current) {\r\n    //   this.refScrollBottom.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\r\n    // }\r\n    if (prevState.skipCoeff !== this.state.skipCoeff ) {\r\n      if (this.state.skipCoeff > 0) {\r\n        document.getElementById('lastHistoryElem').scrollIntoView({block: \"center\", behavior: \"smooth\"})\r\n      }\r\n    }\r\n\r\n    if (prevProps.postMessage && this.props.postMessage === false) {\r\n      if (document.getElementById('lastMyMessage')) {\r\n        document.getElementById('lastMyMessage').scrollIntoView({block: \"center\", behavior: \"smooth\"});\r\n      }\r\n    }\r\n\r\n    if (this.props.postMessage) {\r\n      this.pushMyMessage();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <MainComp \r\n        ref={{\r\n          refScrollBottom: this.refScrollBottom,\r\n          refScrollTop: this.refScrollTop\r\n        }}\r\n        {...this.props}\r\n        coeff={this.state.skipCoeff}\r\n        history={this.state.history}\r\n        limit={this.state.limit}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;","C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Header\\Header.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\containers\\Footer\\Footer.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\HeaderComp\\HeaderComp.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\FooterComp\\FooterComp.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MainComp.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MessageComp\\MessageComp.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\components\\MainComp\\MyMessageComp\\MyMessageComp.js",[],"C:\\Users\\Simon\\Desktop\\WordHacker\\ProjectsNotFinished\\test_task\\src\\https\\socket.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":91,"column":45,"nodeType":"68","messageId":"69","endLine":91,"endColumn":47},{"ruleId":"70","severity":1,"message":"71","line":91,"column":61,"nodeType":"68","messageId":"72","endLine":91,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":91,"column":67,"nodeType":"68","messageId":"72","endLine":91,"endColumn":68},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]